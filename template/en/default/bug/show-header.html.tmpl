[%# This Source Code Form is subject to the terms of the Mozilla Public
  # License, v. 2.0. If a copy of the MPL was not distributed with this
  # file, You can obtain one at http://mozilla.org/MPL/2.0/.
  #
  # This Source Code Form is "Incompatible With Secondary Licenses", as
  # defined by the Mozilla Public License, v. 2.0.
  #%]

[%# This template should be called with PROCESS before processing
  # "global/header.html.tmpl" in any template that is going to load the
  # bug form. It expects only a "bug" object, and can even manage to get
  # along without that. Some of these variables are just defaults that will
  # be overridden by the calling templates.
  #%]

[% filtered_alias = bug.alias FILTER html %]
[% filtered_desc = bug.short_desc FILTER html %]
[% filtered_timestamp = bug.delta_ts FILTER time %]

[% subheader = filtered_desc %]
[% title = "$bug.bug_id &ndash; " %]
[% IF bug.alias != '' %]
  [% title = title _ "($filtered_alias) " %]
[% END %]
[% title = title _ filtered_desc %]
[% yui = [ 'yui-base', 'oop','attribute-core', 'classnamemanager','event-custom-base','event-base', 'features', 'dom-core', 'dom-base', 'selector-native', 'selector', 'node-core', 'dom-style', 'node-base', 'escape', 'button-core', 'cssbutton', 'event-custom-complex', 'attribute-observable', 'attribute-extras', 'attribute-base', 'attribute-complex', 'base-core', 'base-observable', 'base-base', 'pluginhost-base', 'pluginhost-config', 'base-pluginhost', 'event-synthetic', 'event-focus', 'node-style', 'skin-sam-widget-base', 'widget-base', 'widget-htmlparser', 'widget-skin', 'event-delegate', 'node-event-delegate', 'widget-uievents',
    'button', 'array-extras', 'base-build','dataschema-base','jsonrpc-parse','json-stringify','dataschema-json','datasource-local','plugin','cache-base','datasource-cache','querystring-stringify-simple','io-base','io','io-xdr','io-queue', 'datasource-io','datasource-jsonschema','intl-base','intl','escape','array-extras','array-invoke','arraylist','model','model-list','event-base','features','dom-core','dom-base','selector-native', 'selector', 'node-core', 'dom-style', 'node-base', 'event-delegate', 'node-event-delegate','datatable-core', 'view','classnamemanager','datatable-body','datatype-number-format','lang/datatype-date-format','datatype-date-format,datatable-formatters', 'io-form','io-upload-iframe','datatable-head',
'datatable-table',
'attribute-complex',
'event-synthetic',
'event-focus',
'node-style','stylesheet',
'skin-sam-widget-base','color-  base',
'widget-base','widget-htmlparser','widget-skin','widget-uievents','skin-sam-datatable-base','datatable-base','datatable-datasource','event-valuechange' , 'autocomplete-base',
    'autocomplete-sources',
    'intl-base',
    'intl',
    'lang/autocomplete-list',
    'event-resize',
    'dom-screen',
    'node-screen',
    'selector-css2',
    'selector-css3',
    'node-style',
    'pluginhost-base',
    'pluginhost-config',
    'node-pluginhost',
    'shim-plugin',
    'attribute-complex',
    'base-pluginhost',
    'classnamemanager',
    'skin-sam-widget-base',
    'widget-base',
    'widget-htmlparser',
    'widget-skin',
    'event-delegate',
    'node-event-delegate',
    'widget-uievents',
    'widget-position',
    'widget-position-align',
    'querystring-stringify-simple',
    'io-base',
    'json-parse',
    'get',
    'jsonp',
    'jsonp-url',
    'yql',
    'yql-jsonp',
    'lang/autocomplete-list_en',
    'skin-sam-autocomplete-list',
    'autocomplete-list',
    'autocomplete-list-keys',
    'autocomplete-plugin', 'array-invoke', 'arraylist', 'json-parse', 'model', 'model-list', 'datatable-core', 'view',
    'datatable-head','datatable-message', 'datatable-body', 'datatable-table', 'skin-sam-datatable-base', 'datatable-base', 'intl-base', 'intl', 'lang/calendar-base', 'datatype-date-parse', 'lang/datatype-date-format', 'datatype-date-format', 'datatype-date-math', 'cssgrids', 'skin-sam-calendar-base', 'calendar-base', 'plugin', 'node-pluginhost', 'dom-screen', 'node-screen', 'skin-sam-calendarnavigator', 'calendarnavigator', 'skin-sam-calendar', 'calendar', 'cookie' ]
 %]
[% yui.push('container') IF user.can_tag_comments %]
[% javascript_urls = [ "js/util.js", "js/field.js" ] %]
[% javascript_urls.push("js/bug.js") IF user.id  %]
[% javascript_urls.push('js/comment-tagging.js')
     IF user.id && Param('comment_taggers_group') %]
[% IF bug.defined %]
  [% header = "$terms.Bug&nbsp;$bug.bug_id" %]
  [% header_addl_info = "Last modified: $filtered_timestamp" %]
  [% unfiltered_title = "$bug.bug_id â€“ " %]
  [% IF bug.alias != '' %]
    [% unfiltered_title = unfiltered_title _ "($bug.alias) " %]
  [% END %]
  [% unfiltered_title = unfiltered_title _ bug.short_desc %]
  [% javascript =  BLOCK %]
    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null,
                             "[% unfiltered_title FILTER js %]",
                             "show_bug.cgi?id=[% bug.bug_id FILTER js %]" );
        document.title = "[% unfiltered_title FILTER js %]";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "[% unfiltered_title FILTER js %]", href);
      }
    }
    Y.on('domready', function() {
      initDirtyFieldTracking();

      [% IF user.id AND user.is_involved_in_bug(bug) %]
        YUI.bugzilla.bugUserLastVisit.update([% bug.bug_id FILTER none %]);
      [% END %]
    });
    [% javascript FILTER none %]
  [% END %]
[% END %]
[% style_urls = ['skins/standard/bug.css'] %]
[% doc_section = "using.html#anatomy-of-a-bug" %]
[% bodyclasses = ['bz_bug',
                  "bz_status_$bug.bug_status",
                  "bz_product_$bug.product",
                  "bz_component_$bug.component",
                  "bz_bug_$bug.bug_id",
                  ] %]
[% FOREACH group = bug.groups_in %]
  [% bodyclasses.push("bz_group_$group.name") %]
[% END %]

[% Hook.process('end') %]
